#
# This file is a Makefile for Regions.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.
#

PACKAGE = @PACKAGE_NAME@
VERSION = @PACKAGE_VERSION@

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =		@prefix@
exec_prefix =		@exec_prefix@

# The following definition can be set to non-null for special systems
# like AFS with replication.  It allows the pathnames used for installation
# to be different than those used for actually reference files at
# run-time.  INSTALL_ROOT is prepended to $prefix and $exec_prefix
# when installing files.
INSTALL_ROOT = $(DESTDIR)

# Directory in which to install program(s):
BIN_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/bin

# Directory in which to install the .a or .so binary for the library:
LIB_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/lib

# Directory in which to install the include file(s):
INCLUDE_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/include

# Top-level directory for manual entries:
MAN_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/share/man

# Top-level directory for share entries:
MAN_SHARE_DIR =		$(INSTALL_ROOT)$(prefix)/share

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =			/bin/sh

# There are just too many different versions of "install" around;
# better to use the install-sh script that comes with the distribution,
# which is slower but guaranteed to work.

INSTALL = 		@srcdir@/install-sh -c
INSTALL_PROGRAM =	${INSTALL}
INSTALL_DATA =		${INSTALL} -m 644

# which awk-like program do we have?
AWK =		@AWK@

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

# does ranlib exist?
RANLIB =	@RANLIB@
# what about ar?
AR =		@AR@

# special suffix on programs (Windows)?
EXE =		@EXEEXT@

# which compiler are we using?
CC  =		@CC@

# defines from configure (including check for dynamic linking)
AC_FLAGS =	@DEFS@ @HAVE_DL@

# extra includes
EXTRA_INCS =	-Iutil -Iwcs @EXTRA_INCS@

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS =	@CFLAGS@ $(EXTRA_INCS) $(AC_FLAGS)

# To add ld switches, change the following line:
LDFLAGS =	@LDFLAGS@

# extra libraries we need for linking
EXTRA_LIBS =	@EXTRA_LIBS@ -lm

# special definitions for region filtering
OBJPATH	=	\"$(LIB_INSTALL_DIR):.\"
REGIONS_CC =	@REGIONS_CC@
REGIONS_CFLAGS=	@REGIONS_CFLAGS@

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

RM =		rm -rf
LEX =		flex -i

# for debugging using funtools
# FUNTOOLS =	$$HOME
# FLIBS =	-L$(FUNTOOLS)/lib -lfuntools -lm
# CFLAGS = 	-Wall -g -I$(FUNTOOLS)/include -I$(CFITSIO)
# LIBS =	$(FLIBS)

UTIL =		./util
USRCS =		$(UTIL)/file.c \
		$(UTIL)/find.c \
		$(UTIL)/macro.c \
		$(UTIL)/mkrtemp.c \
		$(UTIL)/strtod.c \
		$(UTIL)/winprocess.c \
		$(UTIL)/word.c \
		$(UTIL)/xalloc.c \
		$(UTIL)/xerror.c \
		$(UTIL)/xlaunch.c \
		$(UTIL)/zprocess.c
UOBJS = 	$(USRCS:%.c=%.o)

WCS =		./wcs
WSRCS =  	$(WCS)/wcsinit.c \
		$(WCS)/wcs.c \
		$(WCS)/wcscon.c \
		$(WCS)/fitsfile.c \
		$(WCS)/imhfile.c \
		$(WCS)/fileutil.c \
		$(WCS)/hget.c \
		$(WCS)/hput.c \
		$(WCS)/iget.c \
		$(WCS)/imio.c \
		$(WCS)/worldpos.c \
		$(WCS)/tnxpos.c \
		$(WCS)/dsspos.c \
		$(WCS)/platepos.c \
		$(WCS)/poly.c \
		$(WCS)/wcslib.c \
		$(WCS)/lin.c \
		$(WCS)/cel.c \
		$(WCS)/proj.c \
		$(WCS)/sph.c \
		$(WCS)/wcstrig.c \
		$(WCS)/dateutil.c \
		$(WCS)/distort.c \
		$(WCS)/zpxpos.c
WOBJS = 	$(WSRCS:%.c=%.o)

RSRCS =		lex.reg.c regions.c regprog.c regprog_c.c regprog_em.c \
		imregions.c imfilter.c jsfitsio.c healpix.c dl.c
ROBJS = 	$(RSRCS:%.c=%.o)

SRCS =		regcnts.c regcntsSubs.c regcntsDisplay.c
OBJS = 		$(SRCS:%.c=%.o)

TESTDIR =	./test
DOC =		./doc

PROGS =		regcnts regdisp

SCRIPTS =	pltregcnts.sh regcnts.sh

DS9TOOLS =	regions.ds9

TPROGS =	cimtest

LIBS =		libregions.a
EMLIBS =	libregions_em.a

INCS =		regions.h

INCP =		regionsP.h

LIBOBJS	=	$(ROBJS) $(WOBJS) $(UOBJS)
EMLIBOBJS =	$(ROBJS) $(OBJS)

IDIRS =		$(LIB_INSTALL_DIR) $(INCLUDE_INSTALL_DIR) $(BIN_INSTALL_DIR)

all:		lib progs

progs:		$(PROGS)

test:		$(TPROGS)

objs:		$(OBJS)

lib:		$(LIBS)

emlib:		$(EMLIBS)

libregions.a:	$(LIBOBJS) $(INCS) $(INCP)
		$(AR) cruv $@ $(LIBOBJS)
		$(RANLIB) $@

libregions_em.a:$(EMLIBOBJS) $(INCS) $(INCP)
		$(AR) cruv libregions.a $(EMLIBOBJS)
		$(RANLIB) libregions.a

# automatic variables defined in:
# http://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html
regcnts:	$(OBJS) libregions.a
		$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $+ $(EXTRA_LIBS)

regdisp:	regdisp.o regcntsSubs.o libregions.a
		$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $+ $(EXTRA_LIBS)

cimtest:	cimtest.o libregions.a
		$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $+ $(EXTRA_LIBS)

regprog_c.o:	regprog_c.c
		$(CC) $(CPPFLAGS) $(CFLAGS) -c $? \
		-DOBJPATH="$(OBJPATH)" \
		-DREGIONS_CC="$(REGIONS_CC)" \
		-DREGIONS_CFLAGS="$(REGIONS_CFLAGS)"

parser:		lex.reg.c

LPRE =		regions
lex.reg.c:	FORCE
		@(echo "generating region parser ..."; $(LEX) -P$(LPRE) reg.l; \
		  sed "s/yytext_ptr/"$(LPRE)"text_ptr/g" < lex.$(LPRE).c > nlex.reg.c; \
		  mv nlex.reg.c lex.reg.c; rm -f lex.$(LPRE).c)

imregions_h.h:	imregions.h include.sed
		@($(RM) imregions_h.h; \
		  ./include.sed IMREGIONS_H < imregions.h > imregions_h.h)

imregions_c.h:	imregions.c include.sed
		@($(RM) imregions_c.h; \
		  ./include.sed IMREGIONS_C < imregions.c > imregions_c.h)

imfilter_c.h:	imfilter.c include.sed
		@($(RM) imfilter_c.h; \
		  ./include.sed IMFILTER_C < imfilter.c > imfilter_c.h)

headers:	imregions_h.h imregions_c.h imfilter_c.h

install:	$(PROGS) $(LIBS) FORCE
		@(for i in $(IDIRS) ; do \
		    if [ ! -d $$i ] ; then \
			echo "Making directory $$i"; \
			mkdir -p $$i; chmod 755 $$i; \
		    fi; \
		  done; \
	          for i in $(LIBS); do \
		    echo "Installing $$i"; \
		    $(INSTALL_DATA) $$i $(LIB_INSTALL_DIR)/$$i; \
		    $(RANLIB) $(LIB_INSTALL_DIR)/$$i; \
		    chmod 644 $(LIB_INSTALL_DIR)/$$i; \
	          done; \
	          for i in $(INCS); do \
		    echo "Installing $$i"; \
		    $(INSTALL_DATA) $$i $(INCLUDE_INSTALL_DIR)/$$i; \
		    chmod 644 $(INCLUDE_INSTALL_DIR)/$$i; \
	          done; \
	          for i in $(DS9TOOLS); do\
		    echo "Installing $$i" ; \
		    $(INSTALL_DATA) $$i $(BIN_INSTALL_DIR)/$$j ; \
		    chmod 644 $(BIN_INSTALL_DIR)/$$i; \
		  done; \
		  echo "Installing regions.pc"; \
		  mkdir -p $(LIB_INSTALL_DIR)/pkgconfig; \
		  $(INSTALL_DATA) regions.pc $(LIB_INSTALL_DIR)/pkgconfig; \
	          for i in $(SCRIPTS); do \
		    echo "Installing $$i" ; \
		    $(INSTALL_PROGRAM) $$i $(BIN_INSTALL_DIR)/$$i; \
		  done; \
	          for i in $(PROGS); do\
		    j=$$i$(EXE); \
		    echo "Installing $$j" ; \
		    $(INSTALL_PROGRAM) $$j $(BIN_INSTALL_DIR)/$$j ; \
		  done;)

clean:		FORCE
		@($(RM) *.a *.so *.so.? *.so.?.? *.dylib *.o \
		  $(PROGS) $(TPROGS) \
		  *.exe core core.[0-9]* errs *pure* .nfs* \
		  foo* *~ *.log \#* TAGS *.E a.out a.out.js errors \
		  gmon.out *.pg *.bak regtest.pr regtest.dy regtest.co \
		  config.info config.log autom4te.cache *.dSYM; \
		  $(RM) $(DOC)/*~ $(DOC)/*.bak; \
		  $(RM) $(WCS)/*~ $(WCS)/*.o; \
		  $(RM) $(UTIL)/*~ $(UTIL)/*.o; \
		  $(RM) $(TESTDIR)/*~ $(TESTDIR)/*.out $(TESTDIR)/*.log $(TESTDIR)/*.pr $(TESTDIR)/*.dy; \
		  cd em && make clean;)

Makefile:	Makefile.in
		$(SHELL) config.status

spell:		FORCE
		@(for f in $(DOC)/*.html; do \
		    echo "spell check $$f ..."; \
		    aspell -c $$f; \
		  done)

tests:		regcnts FORCE
		@(cd $(TESTDIR); \
		  ./alltests -r ../regtest; \
		  echo " "; \
		  for f in `ls ../regtest.*`; do \
		    echo "log file: $$f"; \
		    egrep -v 'EXACT|SUM|PROG|REV' < $$f | \
		    $(AWK) 'NF>0&&$$1!=")"{print $$0}'; \
		    echo " "; \
		  done)

errcheck:	FORCE
		@(egrep '[^x]error|warning|ld:|collect2:|make:' foo | \
		  egrep -v "^lex.*but not used"; true)

FORCE:
